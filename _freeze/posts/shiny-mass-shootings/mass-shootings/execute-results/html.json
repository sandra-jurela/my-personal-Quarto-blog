{
  "hash": "7564ca4d48685af794515aea284246e4",
  "result": {
    "markdown": "---\ntitle: \"Shiny App - Mass Shootings in the USA\"\ndescription: \"EDA with Shiny app on mass shootings between August 20th, 1982 and February 13th, 2023.\"\ndate: \"2023-03-01\"\ncategories: \n  - R\n  - shiny\n  - EDA\n  - data cleaning\nimage: images/preview.png\n---\n\n\n## Introduction\n\nMass Shootings have been a topic of intense discussion in the United States. A public \"database\" of mass shootings since 1982 has been made available by the [Mother Jones](https://www.motherjones.com/politics/2012/12/mass-shootings-mother-jones-full-data/), a non-profit organization. This \"database\" is stored in a Google spreadsheet and you can view it [here](https://docs.google.com/spreadsheets/d/1b9o6uDO18sLxBqPwl_Gh9bnhW-ev_dABH83M5Vb5L8o/edit#gid=0) and download as a CSV file.\n\n\n## Data overview\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tidygeocoder)\nlibrary(plotly)\ntheme_set(theme_classic())\n\nmass_shootings <- read_csv(\"data/mass_shootings_usa_1982-2023.csv\")\n\nmass_shootings %>% glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 140\nColumns: 24\n$ case                             <chr> \"Michigan State University shooting\",â€¦\n$ location...2                     <chr> \"East Lansing, Michigan\", \"Half Moon â€¦\n$ date                             <date> 2023-02-13, 2023-01-23, 2023-01-21, â€¦\n$ summary                          <chr> \"Anthony D. McRae, 43, opened fire atâ€¦\n$ fatalities                       <dbl> 3, 7, 11, 6, 5, 3, 5, 3, 7, 3, 3, 4, â€¦\n$ injured                          <chr> \"5\", \"1\", \"10\", \"6\", \"25\", \"2\", \"2\", â€¦\n$ total_victims                    <chr> \"8\", \"8\", \"21\", \"12\", \"30\", \"5\", \"7\",â€¦\n$ location...8                     <chr> \"School\", \"workplace\", \"Other\", \"Workâ€¦\n$ age_of_shooter                   <chr> \"43\", \"67\", \"72\", \"31\", \"22\", \"22\", \"â€¦\n$ prior_signs_mental_health_issues <chr> \"-\", \"-\", \"yes\", \"-\", \"yes\", \"-\", \"-\"â€¦\n$ mental_health_details            <chr> \"-\", \"-\", \"According to the LA Times,â€¦\n$ weapons_obtained_legally         <chr> \"yes\", \"-\", \"-\", \"-\", \"-\", \"yes\", \"-\"â€¦\n$ where_obtained                   <chr> \"-\", \"-\", \"-\", \"-\", \"-\", \"Dance's Spoâ€¦\n$ weapon_type                      <chr> \"semiautomatic handguns\", \"semiautomaâ€¦\n$ weapon_details                   <chr> \"-\", \"-\", \"-\", \"-\", \"-\", \"Glock 45 9mâ€¦\n$ race                             <chr> \"Black\", \"Asian\", \"Asian\", \"Black\", \"â€¦\n$ gender                           <chr> \"M\", \"M\", \"M\", \"M\", \"M\", \"M\", \"M\", \"Mâ€¦\n$ sources                          <chr> \"https://www.cnn.com/us/live-news/micâ€¦\n$ mental_health_sources            <chr> \"-\", \"-\", \"https://www.latimes.com/caâ€¦\n$ sources_additional_age           <chr> \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-â€¦\n$ latitude                         <chr> \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-â€¦\n$ longitude                        <chr> \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-â€¦\n$ type                             <chr> \"Mass\", \"Spree\", \"Mass\", \"Mass\", \"Masâ€¦\n$ year                             <dbl> 2023, 2023, 2023, 2022, 2022, 2022, 2â€¦\n```\n:::\n:::\n\n\n\nWe have 140 cases, described with 24 variables. At first glance, this dataset clearly needs extensive cleaning.\n\n## Data cleaning\n\n### &#129529; Step 1. Innitial cleaning\n\nThe first cleaning step includes:\n\n- selecting columns of interest,\n- replacing the character value``\"-\"`` with `NA` in all columns with character data type,\n- renaming location columns,\n- converting character data type to numeric for specific columns.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmass_shootings_cln <- mass_shootings %>% \n  select(1:6, 8:10, 12, 16, 17, 21:24) %>% \n  mutate(across(where(is.character), ~na_if(., \"-\"))) %>% \n  rename(location = location...2, location_2 = location...8) %>% \n  mutate_at(c(\"injured\", \"age_of_shooter\", \"latitude\", \"longitude\"), as.numeric)\n  \nmass_shootings_cln %>% glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 140\nColumns: 16\n$ case                             <chr> \"Michigan State University shooting\",â€¦\n$ location                         <chr> \"East Lansing, Michigan\", \"Half Moon â€¦\n$ date                             <date> 2023-02-13, 2023-01-23, 2023-01-21, â€¦\n$ summary                          <chr> \"Anthony D. McRae, 43, opened fire atâ€¦\n$ fatalities                       <dbl> 3, 7, 11, 6, 5, 3, 5, 3, 7, 3, 3, 4, â€¦\n$ injured                          <dbl> 5, 1, 10, 6, 25, 2, 2, 2, 46, 0, 1, Nâ€¦\n$ location_2                       <chr> \"School\", \"workplace\", \"Other\", \"Workâ€¦\n$ age_of_shooter                   <dbl> 43, 67, 72, 31, 22, 22, 15, 20, 21, 7â€¦\n$ prior_signs_mental_health_issues <chr> NA, NA, \"yes\", NA, \"yes\", NA, NA, NA,â€¦\n$ weapons_obtained_legally         <chr> \"yes\", NA, NA, NA, NA, \"yes\", NA, \"yeâ€¦\n$ race                             <chr> \"Black\", \"Asian\", \"Asian\", \"Black\", \"â€¦\n$ gender                           <chr> \"M\", \"M\", \"M\", \"M\", \"M\", \"M\", \"M\", \"Mâ€¦\n$ latitude                         <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, Nâ€¦\n$ longitude                        <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, Nâ€¦\n$ type                             <chr> \"Mass\", \"Spree\", \"Mass\", \"Mass\", \"Masâ€¦\n$ year                             <dbl> 2023, 2023, 2023, 2022, 2022, 2022, 2â€¦\n```\n:::\n:::\n\n\nðŸ”Ž Are there any duplicates? No.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(duplicated(mass_shootings))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n:::\n\n\n\nðŸ”Ž Number of missing values, `NA`, per column.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmass_shootings_cln %>% \n  summarise_all(~sum(is.na(.))) %>% \n  # transposing for better visibility\n  pivot_longer(cols = everything(), names_to = \"column\", values_to = \"n_missing\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 16 Ã— 2\n   column                           n_missing\n   <chr>                                <int>\n 1 case                                     0\n 2 location                                 0\n 3 date                                     0\n 4 summary                                  0\n 5 fatalities                               0\n 6 injured                                  1\n 7 location_2                               0\n 8 age_of_shooter                           2\n 9 prior_signs_mental_health_issues        27\n10 weapons_obtained_legally                16\n11 race                                    12\n12 gender                                   0\n13 latitude                                14\n14 longitude                               14\n15 type                                     0\n16 year                                     0\n```\n:::\n:::\n\n\n14 of the most recent cases don't have location coordinates at all. We'll address this in the final cleanup step.\n\n\n### &#129529; Step 2. Fixing unique values for categorical variables\n\nðŸ”Ž Let's take a look at the unique values of the `gender` column.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmass_shootings_cln %>% \n  group_by(gender) %>% \n  count(sort = TRUE) %>% \n  ungroup()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 Ã— 2\n  gender            n\n  <chr>         <int>\n1 Male             70\n2 M                65\n3 Female            2\n4 Male & Female     2\n5 F                 1\n```\n:::\n:::\n\n\nAlmost all categorical variables need unique values correction. \n\nTo make a long story short, I'll correct them all in one step using `case_when` function, and we'll look at them later during the analysis.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmass_shootings_cln <- mass_shootings_cln %>% \n  mutate(gender = case_when(gender == \"F\" ~ \"Female\",\n                            gender == \"M\" ~ \"Male\", \n                            TRUE ~ gender),\n         race = case_when(race == \"white\" ~ \"White\",\n                          race == \"black\" ~ \"Black\",\n                          race == \"unclear\" ~ \"Unclear\",\n                          TRUE ~ race),\n         location_2 = \n           case_when(location_2 %in% c(\"workplace\", \"\\nWorkplace\") ~ \"Workplace\",\n                                location_2 == \"Other\\n\" ~ \"Other\",\n                                location_2 == \"religious\" ~ \"Religious\",\n                                TRUE ~ location_2),\n         prior_signs_mental_health_issues = \n           case_when(prior_signs_mental_health_issues == \"yes\" ~ \"Yes\",\n                     prior_signs_mental_health_issues == \"TBD\" ~ \"To be determined\",\n                     TRUE ~ prior_signs_mental_health_issues),\n         weapons_obtained_legally = \n           case_when(weapons_obtained_legally %in% c(\"yes\", \"\\nYes\") ~ \"Yes\",\n                     weapons_obtained_legally == \"TBD\" ~ \"To be determined\",\n                     weapons_obtained_legally %>% str_detect(\"Kelley\") ~ \"Unknown\",\n                     weapons_obtained_legally %>% str_detect(\"some\") ~ \"Partially\",\n                     TRUE ~ weapons_obtained_legally))\n```\n:::\n\n\n\n### &#129529; Step 3. Geocoding locations with missing coordinates\n\nThere are 14 cases with missing location coordinates. In this step we'll convert locations to coordinates with geocoding. and use them later to create a `leaflet` map for a `shiny app`.\n\nThe `tidygeocoder` package provides geocoding services. It's designed to work easily with the `tidyverse.` It also provides access to several different geocoding services, including [LocationIQ](https://locationiq.com/) which I'm going to use here. LocationIQ is a freemium service that provides a free tier, which doesn't require you to give them your billing details. When you sign up to LocationIQ, they'll take you to the Manage Your API Access Tokens page, which is where we obtain our API token. Next, you need to provide the `tidygeocoder` package with your API key.\n\nThe first step is to select only locations with missing coordinates and geocode them.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngeocoded_locations <- mass_shootings_cln %>% \n  filter(is.na(latitude) | is.na(longitude)) %>% \n  select(location) %>% \n  geocode(location, method = \"iq\")\n\ngeocoded_locations\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 14 Ã— 3\n   location                     lat   long\n   <chr>                      <dbl>  <dbl>\n 1 East Lansing, Michigan      42.7  -84.5\n 2 Half Moon Bay, California   37.5 -122. \n 3 Monterey Park, California   34.1 -118. \n 4 Chesapeake, Virginia        36.7  -76.2\n 5 Colorado Springs, Colorado  38.8 -105. \n 6 Charlottesville, Virginia   38.0  -78.5\n 7 Hedingham, North Carolina   35.8  -78.5\n 8 Greenwood, Indiana          39.6  -86.1\n 9 Highland Park, Illinois     42.2  -87.8\n10 Birmingham, Alabama         33.5  -86.8\n11 Smithsburg, Maryland        39.7  -77.6\n12 Tulsa, Oklahoma             36.2  -96.0\n13 Uvalde, Texas               29.3  -99.8\n14 Buffalo, New York           42.9  -78.9\n```\n:::\n:::\n\n\nThe next step is to join mass shootings table with geocoded locations and replace missing latitudes and longitudes with geocoded.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmass_shootings_cln <- mass_shootings_cln %>% \n  left_join(geocoded_locations, by = \"location\") %>% \n  mutate(latitude = ifelse(is.na(latitude), lat, latitude),\n         longitude = ifelse(is.na(longitude), long, longitude))\n\nsum(is.na(mass_shootings_cln$latitude))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n\n```{.r .cell-code}\nsum(is.na(mass_shootings_cln$longitude))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n:::\n\n\nOK, this looks fine.\n\n## Exploratory data analysis (EDA)\n\n### ðŸ“„ Breakdown by categorical variables\n\n#### Gender\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmass_shootings_cln %>% \n  group_by(gender) %>% \n  summarise(n = n(), .groups = \"drop\") %>% \n  mutate(percent = scales::percent(n/sum(n), accuracy = 0.1)) %>% \n  arrange(desc(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 Ã— 3\n  gender            n percent\n  <chr>         <int> <chr>  \n1 Male            135 96.4%  \n2 Female            3 2.1%   \n3 Male & Female     2 1.4%   \n```\n:::\n:::\n\n#### Race\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmass_shootings_cln %>% \n  group_by(race) %>% \n  summarise(n = n(), .groups = \"drop\") %>% \n  mutate(percent = scales::percent(n/sum(n), accuracy = 0.1)) %>% \n  arrange(desc(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 8 Ã— 3\n  race                n percent\n  <chr>           <int> <chr>  \n1 White              73 52.1%  \n2 Black              25 17.9%  \n3 <NA>               12 8.6%   \n4 Latino             11 7.9%   \n5 Asian              10 7.1%   \n6 Other               5 3.6%   \n7 Native American     3 2.1%   \n8 Unclear             1 0.7%   \n```\n:::\n:::\n\n\n#### Specific location\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmass_shootings_cln %>% \n  group_by(location_2) %>% \n  summarise(n = n(), .groups = \"drop\") %>% \n  mutate(percent = scales::percent(n/sum(n), accuracy = 0.1)) %>% \n  arrange(desc(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 Ã— 3\n  location_2     n percent\n  <chr>      <int> <chr>  \n1 Other         53 37.9%  \n2 Workplace     51 36.4%  \n3 School        21 15.0%  \n4 Religious      8 5.7%   \n5 Military       6 4.3%   \n6 Airport        1 0.7%   \n```\n:::\n:::\n\n\n#### Prior signs of mental health issues\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmass_shootings_cln %>% \n  group_by(prior_signs_mental_health_issues) %>% \n  summarise(n = n(), .groups = \"drop\") %>% \n  mutate(percent = scales::percent(n/sum(n), accuracy = 0.1)) %>% \n  arrange(desc(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 Ã— 3\n  prior_signs_mental_health_issues     n percent\n  <chr>                            <int> <chr>  \n1 Yes                                 66 47.1%  \n2 <NA>                                27 19.3%  \n3 Unclear                             24 17.1%  \n4 No                                  17 12.1%  \n5 To be determined                     5 3.6%   \n6 Unknown                              1 0.7%   \n```\n:::\n:::\n\n\n\n#### Weapons obtained legally\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmass_shootings_cln %>% \n  group_by(weapons_obtained_legally) %>% \n  summarise(n = n(), .groups = \"drop\") %>% \n  mutate(percent = scales::percent(n/sum(n), accuracy = 0.1)) %>% \n  arrange(desc(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 Ã— 3\n  weapons_obtained_legally     n percent\n  <chr>                    <int> <chr>  \n1 Yes                         93 66.4%  \n2 No                          16 11.4%  \n3 <NA>                        16 11.4%  \n4 To be determined             7 5.0%   \n5 Unknown                      7 5.0%   \n6 Partially                    1 0.7%   \n```\n:::\n:::\n\n\n#### Type\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmass_shootings_cln %>% \n  group_by(type) %>% \n  summarise(n = n(), .groups = \"drop\") %>% \n  mutate(percent = scales::percent(n/sum(n), accuracy = 0.1)) %>% \n  arrange(desc(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 Ã— 3\n  type      n percent\n  <chr> <int> <chr>  \n1 Mass    119 85.0%  \n2 Spree    21 15.0%  \n```\n:::\n:::\n\n\nNote: Spree shootings here have three or more victims in a short time in multiple locations.\n\n### ðŸ“Š Age of shooter distribution\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmass_shootings_cln %>% \n  ggplot(aes(age_of_shooter)) +\n  geom_histogram(fill = \"indianred\", color = \"white\", binwidth = 5) +\n  labs(title = \"Age Distribution\", x = \"age of shooter\")\n```\n\n::: {.cell-output-display}\n![](mass-shootings_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n- The vast majority of shooters were between 20 and 50 years old. \n- Most shooters were in the 20-25 age group.\n\nðŸ”Ž Who was the youngest shooter?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nindex <- which.min(mass_shootings_cln$age_of_shooter)\n\nmass_shootings_cln[index, ] %>% \n  select(case, date, summary, fatalities) %>% \n  knitr::kable()\n```\n\n::: {.cell-output-display}\n|case                            |date       |summary                                                                                                                                                                         | fatalities|\n|:-------------------------------|:----------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------:|\n|Westside Middle School killings |1998-03-24 |Mitchell Scott Johnson, 13, and Andrew Douglas Golden, 11, two juveniles, ambushed students and teachers as they left the school; they were apprehended by police at the scene. |          5|\n:::\n:::\n\n\n\n\n### ðŸ“Š Number of cases per year\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- mass_shootings_cln %>%\n  group_by(year) %>%\n  summarise(count = n()) %>% \n  ggplot(aes(year, count)) +\n  geom_col(fill = \"steelblue\") + \n  geom_vline(xintercept = 2012, color = \"red\") +\n  labs(title = \"Number of Cases per Year\") \n\nggplotly(p1)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-86859e31adbf865ebc6e\" style=\"width:100%;height:464px;\" class=\"plotly html-widget\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-86859e31adbf865ebc6e\">{\"x\":{\"data\":[{\"orientation\":\"v\",\"width\":[0.900000000000091,0.900000000000091,0.900000000000091,0.900000000000091,0.900000000000091,0.900000000000091,0.900000000000091,0.900000000000091,0.900000000000091,0.900000000000091,0.900000000000091,0.900000000000091,0.900000000000091,0.900000000000091,0.900000000000091,0.900000000000091,0.900000000000091,0.900000000000091,0.900000000000091,0.900000000000091,0.900000000000091,0.900000000000091,0.900000000000091,0.900000000000091,0.900000000000091,0.900000000000091,0.900000000000091,0.900000000000091,0.900000000000091,0.900000000000091,0.900000000000091,0.900000000000091,0.900000000000091,0.900000000000091,0.900000000000091,0.900000000000091,0.900000000000091,0.900000000000091,0.900000000000091],\"base\":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\"x\":[1982,1984,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023],\"y\":[1,2,1,1,1,2,1,3,2,4,1,1,1,2,3,5,1,1,1,1,2,3,4,3,4,1,3,7,5,4,7,6,11,12,10,2,6,12,3],\"text\":[\"year: 1982<br />count:  1\",\"year: 1984<br />count:  2\",\"year: 1986<br />count:  1\",\"year: 1987<br />count:  1\",\"year: 1988<br />count:  1\",\"year: 1989<br />count:  2\",\"year: 1990<br />count:  1\",\"year: 1991<br />count:  3\",\"year: 1992<br />count:  2\",\"year: 1993<br />count:  4\",\"year: 1994<br />count:  1\",\"year: 1995<br />count:  1\",\"year: 1996<br />count:  1\",\"year: 1997<br />count:  2\",\"year: 1998<br />count:  3\",\"year: 1999<br />count:  5\",\"year: 2000<br />count:  1\",\"year: 2001<br />count:  1\",\"year: 2003<br />count:  1\",\"year: 2004<br />count:  1\",\"year: 2005<br />count:  2\",\"year: 2006<br />count:  3\",\"year: 2007<br />count:  4\",\"year: 2008<br />count:  3\",\"year: 2009<br />count:  4\",\"year: 2010<br />count:  1\",\"year: 2011<br />count:  3\",\"year: 2012<br />count:  7\",\"year: 2013<br />count:  5\",\"year: 2014<br />count:  4\",\"year: 2015<br />count:  7\",\"year: 2016<br />count:  6\",\"year: 2017<br />count: 11\",\"year: 2018<br />count: 12\",\"year: 2019<br />count: 10\",\"year: 2020<br />count:  2\",\"year: 2021<br />count:  6\",\"year: 2022<br />count: 12\",\"year: 2023<br />count:  3\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(70,130,180,1)\",\"line\":{\"width\":1.88976377952756,\"color\":\"transparent\"}},\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2012,2012],\"y\":[-0.6,12.6],\"text\":\"xintercept: 2012\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(255,0,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":43.7625570776256,\"r\":7.30593607305936,\"b\":40.1826484018265,\"l\":48.9497716894977},\"plot_bgcolor\":\"rgba(255,255,255,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187},\"title\":{\"text\":\"Number of Cases per Year\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":17.5342465753425},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[1979.455,2025.545],\"tickmode\":\"array\",\"ticktext\":[\"1980\",\"1990\",\"2000\",\"2010\",\"2020\"],\"tickvals\":[1980,1990,2000,2010,2020],\"categoryorder\":\"array\",\"categoryarray\":[\"1980\",\"1990\",\"2000\",\"2010\",\"2020\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.65296803652968,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.689497716895},\"tickangle\":-0,\"showline\":true,\"linecolor\":\"rgba(0,0,0,1)\",\"linewidth\":0.66417600664176,\"showgrid\":false,\"gridcolor\":null,\"gridwidth\":0,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"year\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-0.6,12.6],\"tickmode\":\"array\",\"ticktext\":[\"0.0\",\"2.5\",\"5.0\",\"7.5\",\"10.0\",\"12.5\"],\"tickvals\":[0,2.5,5,7.5,10,12.5],\"categoryorder\":\"array\",\"categoryarray\":[\"0.0\",\"2.5\",\"5.0\",\"7.5\",\"10.0\",\"12.5\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.65296803652968,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.689497716895},\"tickangle\":-0,\"showline\":true,\"linecolor\":\"rgba(0,0,0,1)\",\"linewidth\":0.66417600664176,\"showgrid\":false,\"gridcolor\":null,\"gridwidth\":0,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"count\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.88976377952756,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.689497716895}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"a3c053b11fd3\":{\"x\":{},\"y\":{},\"type\":\"bar\"},\"a3c057836e34\":{\"xintercept\":{}}},\"cur_data\":\"a3c053b11fd3\",\"visdat\":{\"a3c053b11fd3\":[\"function (y) \",\"x\"],\"a3c057836e34\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n<br>\n\n- We can see an increase in mass shootings in the last 10 years. \n- 2020 has a smaller number of cases probably due to Covid restrictions.\n- The data for 2023 is incomplete, but 3 cases in the first two months seems a lot.\n\n### ðŸ“Š Fatalities-Injured relationship\n\n\n::: {.cell}\n\n```{.r .cell-code}\np3 <- mass_shootings_cln %>%\n  ggplot(aes(x = fatalities, y = injured)) +\n  geom_jitter() +\n  scale_y_log10() +\n  labs(title = \"Fatalities-Injured Relationship\")\n  \nggplotly(p3)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-898da6423fb516d88d95\" style=\"width:100%;height:464px;\" class=\"plotly html-widget\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-898da6423fb516d88d95\">{\"x\":{\"data\":[{\"x\":[2.75804998520762,7.03484719414264,10.9841326288879,5.71502781901509,5.15524073634297,3.05726140793413,5.39832530599088,2.75824495796114,7.28989366777241,3.08441844154149,2.95091307349503,3.71243081931025,21.1005763104185,10.2239326957613,3.97968576196581,3.70925411432981,9.16750505175441,7.9357448130846,3.76977267395705,9.8776624487713,8.15630308520049,3.84965522959828,4.72906834278256,3.76197520978749,3.0325811162591,6.61816330049187,8.7185489250347,22.3715315435082,3.02754009608179,12.2392096366733,5.20310140587389,3.38115165308118,4.88093459997326,3.18076769113541,11.8389234246686,11.1847977450117,2.94937170855701,5.12110998444259,3.02671289835125,5.35224135965109,9.91262894123793,4.00973073486239,2.90292945504189,17.2196393722668,4.16029986981303,5.16045343708247,25.7056839570403,2.97530474476516,3.14492288306355,57.9649019338191,2.79429783113301,3.12591022644192,5.23650356940925,2.66942540090531,3.39443793725222,5.38357722591609,5.13613309562206,3.00938990488648,4.75567112341523,48.8765725798905,2.79150418899953,6.22877370044589,13.6479561004788,2.94751998018473,3.12721025366336,9.04127677921206,5.25180682837963,9.22212700527161,2.80466765742749,5.07581235710532,5.88398801703006,2.78912297599018,3.82863739337772,12.3986860891804,6.84277659021318,5.95671139732003,5.10987794082612,5.32528612148017,26.719245181419,7.16308633722365,7.02280859313905,11.9244934236631,6.19984639491886,7.26342576257885,4.94026476405561,7.63499698545784,5.13651765622199,6.27350976075977,9.10136541761458,4.01413008254021,13.2581112988293,14.0576546525583,7.67773796711117,5.72224813364446,5.29841656479985,5.92917664349079,8.71627328023314,5.65370528083295,32.235578051582,5.61056028772146,5.86705183200538,6.82143312431872,8.21857166457921,9.80274619162083,7.38816214650869,5.35928449500352,6.88270966615528,5.05960094835609,7.19315305743366,5.02483954038471,6.65797198284417,7.65705207679421,9.13856991063803,13.3598625639454,3.77947192508727,4.90117891598493,5.22338916938752,4.85415483005345,4.26589613091201,6.0407045437023,5.87538241613656,4.81099141743034,4.18725811745971,5.7355325197801,3.80317556951195,9.29956576097757,4.98118504621088,4.36851042043418,4.74242120422423,6.10731642972678,23.9426880555227,10.2138438494876,9.0848099283874,5.96477577555925,6.66092758420855,5.90668733846396,15.1138548566028,21.7247892402112,5.86520094331354,8.09001534506679],\"y\":[0.701173468520982,0.00337542324967897,1.003655147695,0.773441286792167,1.39915407476256,0.29521205936874,0.295261745557774,0.296052042109679,1.66605527664283,null,0.00223747039558552,null,1.2309193612128,0.475818875060129,null,0.840469075922572,null,0.845053210548211,-0.00582725373353711,null,0.00614098790953251,null,null,0.481360710444608,0.907814873221908,1.39534868269996,1.43749747011331,1.41362707013326,1.08447831914719,0.600785786372618,0.773348805142546,0.00307164067441279,null,null,1.34703712486831,0.782373621069654,0.477350522917419,null,0.304177202018559,0.306222828638271,1.11560423365484,0.602362499765539,null,1.23591090700503,0.00519964683243686,1.00368758891311,1.29568033606706,null,0.473685094134802,2.73838229487418,0.306047821381806,null,null,null,null,0.774000660677857,null,0.477147842871384,1.03607414011567,1.72421238088643,1.15113889904229,0.295920427807216,1.32853145535136,0.948294057535264,null,0.954935226490293,0.300920087655289,0.00641141960273276,-0.00396191271828959,0.00530232481054564,1.11414665404399,1.08407488322754,0.298390058325478,0.899679961067071,null,0.47804626733451,null,0.296276108979334,0.306518694195276,0.00240955340857226,0.476386828283898,1.84864722639629,-0.00361884366714776,0.482109591730149,null,0.00477109015067939,0.841437897178438,1.11529143230555,0.298120941502465,0.00465660648910903,1.4849655374025,0.606119726272211,0.4711007859795,0.00436117029635001,1.3256452832399,0.297654610496837,0.598528177267733,0.00410961106053723,1.35963822454042,0.598687708928772,0.693128577854714,0.301017250837248,null,0.700276027569693,0.608406326947687,0.849148816642115,0.902798100427857,0.59688008631484,null,0.483619388849307,null,0.843818753345505,1.11119322965382,1.38567457578187,1.3940237370168,1.00165077411079,0.0026527098829963,0.298063716424759,0.471188390118575,-0.000165832372753321,null,1.36769479910175,0.00311856384030671,1.2839367370831,0.906689746448889,0.780273056085874,null,0.997442157676808,0.694382995651341,0.00207574080993848,1.29895999944901,0.608261177796704,1.0832028049513,1.45753363679431,0.600615146673654,1.14871501542074,0.776724874436752,1.27310180626089,0.00612452029063724,0.472724113542844],\"text\":[\"fatalities:  3<br />injured:   5\",\"fatalities:  7<br />injured:   1\",\"fatalities: 11<br />injured:  10\",\"fatalities:  6<br />injured:   6\",\"fatalities:  5<br />injured:  25\",\"fatalities:  3<br />injured:   2\",\"fatalities:  5<br />injured:   2\",\"fatalities:  3<br />injured:   2\",\"fatalities:  7<br />injured:  46\",\"fatalities:  3<br />injured:   0\",\"fatalities:  3<br />injured:   1\",\"fatalities:  4<br />injured:  NA\",\"fatalities: 21<br />injured:  17\",\"fatalities: 10<br />injured:   3\",\"fatalities:  4<br />injured:   0\",\"fatalities:  4<br />injured:   7\",\"fatalities:  9<br />injured:   0\",\"fatalities:  8<br />injured:   7\",\"fatalities:  4<br />injured:   1\",\"fatalities: 10<br />injured:   0\",\"fatalities:  8<br />injured:   1\",\"fatalities:  4<br />injured:   0\",\"fatalities:  5<br />injured:   0\",\"fatalities:  4<br />injured:   3\",\"fatalities:  3<br />injured:   8\",\"fatalities:  7<br />injured:  25\",\"fatalities:  9<br />injured:  27\",\"fatalities: 22<br />injured:  26\",\"fatalities:  3<br />injured:  12\",\"fatalities: 12<br />injured:   4\",\"fatalities:  5<br />injured:   6\",\"fatalities:  3<br />injured:   1\",\"fatalities:  5<br />injured:   0\",\"fatalities:  3<br />injured:   0\",\"fatalities: 12<br />injured:  22\",\"fatalities: 11<br />injured:   6\",\"fatalities:  3<br />injured:   3\",\"fatalities:  5<br />injured:   0\",\"fatalities:  3<br />injured:   2\",\"fatalities:  5<br />injured:   2\",\"fatalities: 10<br />injured:  13\",\"fatalities:  4<br />injured:   4\",\"fatalities:  3<br />injured:   0\",\"fatalities: 17<br />injured:  17\",\"fatalities:  4<br />injured:   1\",\"fatalities:  5<br />injured:  10\",\"fatalities: 26<br />injured:  20\",\"fatalities:  3<br />injured:   0\",\"fatalities:  3<br />injured:   3\",\"fatalities: 58<br />injured: 546\",\"fatalities:  3<br />injured:   2\",\"fatalities:  3<br />injured:   0\",\"fatalities:  5<br />injured:   0\",\"fatalities:  3<br />injured:   0\",\"fatalities:  3<br />injured:   0\",\"fatalities:  5<br />injured:   6\",\"fatalities:  5<br />injured:   0\",\"fatalities:  3<br />injured:   3\",\"fatalities:  5<br />injured:  11\",\"fatalities: 49<br />injured:  53\",\"fatalities:  3<br />injured:  14\",\"fatalities:  6<br />injured:   2\",\"fatalities: 14<br />injured:  21\",\"fatalities:  3<br />injured:   9\",\"fatalities:  3<br />injured:   0\",\"fatalities:  9<br />injured:   9\",\"fatalities:  5<br />injured:   2\",\"fatalities:  9<br />injured:   1\",\"fatalities:  3<br />injured:   1\",\"fatalities:  5<br />injured:   1\",\"fatalities:  6<br />injured:  13\",\"fatalities:  3<br />injured:  12\",\"fatalities:  4<br />injured:   2\",\"fatalities: 12<br />injured:   8\",\"fatalities:  7<br />injured:   0\",\"fatalities:  6<br />injured:   3\",\"fatalities:  5<br />injured:   0\",\"fatalities:  5<br />injured:   2\",\"fatalities: 27<br />injured:   2\",\"fatalities:  7<br />injured:   1\",\"fatalities:  7<br />injured:   3\",\"fatalities: 12<br />injured:  70\",\"fatalities:  6<br />injured:   1\",\"fatalities:  7<br />injured:   3\",\"fatalities:  5<br />injured:   0\",\"fatalities:  8<br />injured:   1\",\"fatalities:  5<br />injured:   7\",\"fatalities:  6<br />injured:  13\",\"fatalities:  9<br />injured:   2\",\"fatalities:  4<br />injured:   1\",\"fatalities: 13<br />injured:  31\",\"fatalities: 14<br />injured:   4\",\"fatalities:  8<br />injured:   3\",\"fatalities:  6<br />injured:   1\",\"fatalities:  5<br />injured:  21\",\"fatalities:  6<br />injured:   2\",\"fatalities:  9<br />injured:   4\",\"fatalities:  6<br />injured:   1\",\"fatalities: 32<br />injured:  23\",\"fatalities:  6<br />injured:   4\",\"fatalities:  6<br />injured:   5\",\"fatalities:  7<br />injured:   2\",\"fatalities:  8<br />injured:   0\",\"fatalities: 10<br />injured:   5\",\"fatalities:  7<br />injured:   4\",\"fatalities:  5<br />injured:   7\",\"fatalities:  7<br />injured:   8\",\"fatalities:  5<br />injured:   4\",\"fatalities:  7<br />injured:   0\",\"fatalities:  5<br />injured:   3\",\"fatalities:  7<br />injured:   0\",\"fatalities:  8<br />injured:   7\",\"fatalities:  9<br />injured:  13\",\"fatalities: 13<br />injured:  24\",\"fatalities:  4<br />injured:  25\",\"fatalities:  5<br />injured:  10\",\"fatalities:  5<br />injured:   1\",\"fatalities:  5<br />injured:   2\",\"fatalities:  4<br />injured:   3\",\"fatalities:  6<br />injured:   1\",\"fatalities:  6<br />injured:   0\",\"fatalities:  5<br />injured:  23\",\"fatalities:  4<br />injured:   1\",\"fatalities:  6<br />injured:  19\",\"fatalities:  4<br />injured:   8\",\"fatalities:  9<br />injured:   6\",\"fatalities:  5<br />injured:   0\",\"fatalities:  4<br />injured:  10\",\"fatalities:  5<br />injured:   5\",\"fatalities:  6<br />injured:   1\",\"fatalities: 24<br />injured:  20\",\"fatalities: 10<br />injured:   4\",\"fatalities:  9<br />injured:  12\",\"fatalities:  6<br />injured:  29\",\"fatalities:  7<br />injured:   4\",\"fatalities:  6<br />injured:  14\",\"fatalities: 15<br />injured:   6\",\"fatalities: 22<br />injured:  19\",\"fatalities:  6<br />injured:   1\",\"fatalities:  8<br />injured:   3\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,0,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,0,0,1)\"}},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":43.7625570776256,\"r\":7.30593607305936,\"b\":40.1826484018265,\"l\":43.1050228310502},\"plot_bgcolor\":\"rgba(255,255,255,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187},\"title\":{\"text\":\"Fatalities-Injured Relationship\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":17.5342465753425},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-0.0953484257403763,60.7296757604647],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"20\",\"40\",\"60\"],\"tickvals\":[0,20,40,60],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"20\",\"40\",\"60\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.65296803652968,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.689497716895},\"tickangle\":-0,\"showline\":true,\"linecolor\":\"rgba(0,0,0,1)\",\"linewidth\":0.66417600664176,\"showgrid\":false,\"gridcolor\":null,\"gridwidth\":0,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"fatalities\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-0.143037731163923,2.87559277230457],\"tickmode\":\"array\",\"ticktext\":[\"1\",\"10\",\"100\"],\"tickvals\":[0,1,2],\"categoryorder\":\"array\",\"categoryarray\":[\"1\",\"10\",\"100\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.65296803652968,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.689497716895},\"tickangle\":-0,\"showline\":true,\"linecolor\":\"rgba(0,0,0,1)\",\"linewidth\":0.66417600664176,\"showgrid\":false,\"gridcolor\":null,\"gridwidth\":0,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"injured\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.88976377952756,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.689497716895}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"a3c01215581\":{\"x\":{},\"y\":{},\"type\":\"scatter\"}},\"cur_data\":\"a3c01215581\",\"visdat\":{\"a3c01215581\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n<br>\n\nPlease note that the `Injured` values are log-scaled for better visibility.\n\n__Summary of fatalities__\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(mass_shootings_cln$fatalities)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  3.000   4.000   6.000   7.821   8.250  58.000 \n```\n:::\n:::\n\n\n__Summary of injured people__\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(mass_shootings_cln$injured)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n   0.00    1.00    3.00   11.36   10.00  546.00       1 \n```\n:::\n:::\n\n\n\n## Shiny app\n\nThe app you can see below is embedded in this `quarto` document since my website is static. It was originally published on [shinyapps.io](https://www.shinyapps.io/) and you can also interact with it [here](https://sandra-jurela.shinyapps.io/shiny-mass-shootings-usa/). \n\n__A quick note:__ With a free account I have 25 active hours (when my applications are not idle). If these 25 active hours are exceeded, my app will not be available again until the following month cycle. Hope you get lucky! ðŸ˜Š\n\nðŸ“¢ By clicking on each circle, you can read a summary of the mass shooting case.\n\n<br>\n  \n::: column-page\n<iframe height=\"800\" width=\"100%\" frameborder=\"no\" src=\"https://sandra-jurela.shinyapps.io/shiny-mass-shootings-usa/\">\n  \n</iframe>\n:::\n",
    "supporting": [
      "mass-shootings_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.5.4/htmlwidgets.js\"></script>\r\n<script src=\"../../site_libs/plotly-binding-4.10.0/plotly.js\"></script>\r\n<script src=\"../../site_libs/typedarray-0.1/typedarray.min.js\"></script>\r\n<script src=\"../../site_libs/jquery-3.5.1/jquery.min.js\"></script>\r\n<link href=\"../../site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\r\n<link href=\"../../site_libs/plotly-htmlwidgets-css-2.5.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/plotly-main-2.5.1/plotly-latest.min.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}